		git_managing_version
	git init : initailized empty git repository
	git status : checking git working tree
	git add <filename> : adding to the stage
	git add . : adding all files to the stage
	git commit -m <msg> : commit and add msg
	git commit -am <msg> : (old file) commit and add msg
	git commit -a -m <msg> :(old file) commit and add msg
	git commit -am <msg> : change what u just upload msg
	git log : check recorded files in storage
	git log --oneline : check recorded files in storage (oneline)
	git log -stat : check recroded files in storage with content
	git diff : verify revisions(what just changed)
	git checkout -- <filename> : cancel revisions
	git reset --hard <commit hash> :delete after commit hash
	git reset HEAD <filename> : to unstaged 	
	git reset HEAD^ : cancel what u just staged
	git revert hash : temporarily pending commit and add msg
	mynote.txt : not want to managing version
	temp/ : not want to managing versions
	.swp : not want to managing versions
		
		git_branch
	git branch : checking local branch
	git branch <name> : add <name> branch
	git branch -d <name> : delete branch
	git checkout <branch name> : switching to <branch name>
	git checkout -b <branch> : create <branch> and checkout 
	git reset <commit hash in branch> : close local branch's commit and direct commmit hash
	git log --oneline --branches :  check recorded files in storage in oneline with showing the all branches
	git log --oneline --branches --graph : check recorded files in storage in oneline with showing the all branches with graph
	git log <branch1>..<branch2> : check recorded files in storage, show only in branch1 except in branch2
 	git merge <branch> : merge branch with local branch
	git merge <branch> --no--edit : merge branch with local branch and using git's commit msg
	git merge <branch> --edit : merge branch with local branch and using user's commit msg
	git stash : if u want store before commited file it helps to storage files in stack
	git stash pop : pull files(in stack) out

		github_backup
	git remote add origin <https> : access to own github
	git remote rm origin <https> : remove the local origin
	git remote -v : check whether access or denined 
	git push -u origin <branch> : send branch to local storage 
	git push : using after commit send it to local storage
	git pull origin <branch> : take branch from local storage
	ssh-keygen : home directory'ssh and press enter
	


		github_coroperation	
	git clone <clone address> <directory> : access clone address
	git fetch : read brances changed source
	git merge origin/<branch> : after fetch merge with <branch>'s commit
	git merge FETCH_HEAD : after fetch merge with latest commit
	  

